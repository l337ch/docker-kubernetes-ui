"use strict";describe("D3 utilities service",function(){var e;beforeEach(function(){angular.module("testModule",["ngLodash","kubernetesApp.components.graph"])}),beforeEach(module("testModule")),beforeEach(inject(function(t){e=t})),it("should generate starting positions within specified radius of origin",function(){for(var t=0,i=0;5e4>i;i++){var s=e.getRandomStartingPosition(200),r=s[0],n=s[1],u=Math.sqrt(r*r+n*n);t=Math.max(u,t)}expect(t).toBeLessThan(200)}),it("should determine whether nodes are neighbors",function(){var t={"0,0":1,"1,1":1,"2,2":1,"3,3":1,"4,4":1,"0,3":1,"3,4":1},i=e.neighboring({index:0},{index:3},t,0);expect(i).toBeFalsy(),i=e.neighboring({index:3},{index:4},t,0),expect(i).toBeFalsy(),i=e.neighboring({index:0},{index:4},t,0),expect(i).toBeFalsy(),i=e.neighboring({index:0},{index:3},t,1),expect(i).toBeTruthy(),i=e.neighboring({index:3},{index:4},t,1),expect(i).toBeTruthy(),i=e.neighboring({index:0},{index:4},t,1),expect(i).toBeFalsy()}),it("should find matches in search set",function(){var t=new Set,i={id:"1"},s={id:"2"},r={id:"3"};t.add(i),t.add({id:"2"}),expect(e.setHas(t,i)).toBeTruthy(),expect(e.setHas(t,s)).toBeTruthy(),expect(e.setHas(t,r)).toBeFalsy()}),it("should properly build clusters",function(){var t=[{cluster:0,radius:5},{cluster:0,radius:10},{cluster:0,radius:15},{cluster:1,radius:3},{cluster:1,radius:9},{cluster:1,radius:6},{cluster:2,radius:6},{cluster:2,radius:4},{cluster:2,radius:2}],i=e.buildClusters(t);expect(i.clusters.length).toEqual(3),expect(i.clusters[0].radius).toEqual(15),expect(i.clusters[1].radius).toEqual(9),expect(i.clusters[2].radius).toEqual(6),expect(i.maxRadius).toEqual(15)})});